---
  hetzner_token: <token>
  cluster_name: <cluster-name>
  kubeconfig_path: "./kubeconfig"
  k3s_version: v1.29.3+k3s1
  public_ssh_key_path: "~/.ssh/id_rsa.pub" # This may be different on your system
  private_ssh_key_path: "~/.ssh/id_rsa" # This may be different on your system
  use_ssh_agent: false # set to true if your key has a passphrase or if SSH connections don't work or seem to hang without agent. See https://github.com/vitobotta/hetzner-k3s#limitations
  # ssh_port: 22
  ssh_allowed_networks:
    - <your-ip>/32 # ensure your current IP is included in the range
  api_allowed_networks:
    - <your-ip>/32 # ensure your current IP is included in the range
  private_network_subnet: 10.0.0.0/16 # ensure this doesn't overlap with other networks in the same project
  disable_flannel: false # set to true if you want to install a different CNI
  schedule_workloads_on_masters: false
  # cluster_cidr: 10.244.0.0/16 # optional: a custom IPv4/IPv6 network CIDR to use for pod IPs
  # service_cidr: 10.43.0.0/16 # optional: a custom IPv4/IPv6 network CIDR to use for service IPs
  # cluster_dns: 10.43.0.10 # optional: IPv4 Cluster IP for coredns service. Needs to be an address from the service_cidr range
  # enable_public_net_ipv4: false # default is true
  # enable_public_net_ipv6: false # default is true
  # image: rocky-9 # optional: default is ubuntu-22.04
  # autoscaling_image: 103908130 # optional, defaults to the `image` setting
  # snapshot_os: microos # optional: specified the os type when using a custom snapshot
  # cloud_controller_manager_manifest_url: "https://github.com/hetznercloud/hcloud-cloud-controller-manager/releases/download/v1.19.0/ccm-networks.yaml"
  # csi_driver_manifest_url: "https://raw.githubusercontent.com/hetznercloud/csi-driver/v2.6.0/deploy/kubernetes/hcloud-csi.yml"
  # system_upgrade_controller_deployment_manifest_url: "https://github.com/rancher/system-upgrade-controller/releases/download/v0.13.4/system-upgrade-controller.yaml"
  # system_upgrade_controller_crd_manifest_url: "https://github.com/rancher/system-upgrade-controller/releases/download/v0.13.4/crd.yaml"
  # cluster_autoscaler_manifest_url: "https://raw.githubusercontent.com/kubernetes/autoscaler/master/cluster-autoscaler/cloudprovider/hetzner/examples/cluster-autoscaler-run-on-master.yaml"
  datastore:
    mode: etcd # etcd (default) or external
    # external_datastore_endpoint: postgres://....
  masters_pool:
    instance_type: cpx21
    instance_count: 3
    location: hel1
  worker_node_pools:
    - name: small-static
      instance_type: cpx21
      instance_count: 4
      location: hel1
      # image: debian-11
      # labels:
      #   - key: purpose
      #     value: blah
      # taints:
      #   - key: something
      #     value: value1:NoSchedule
  # - name: big-autoscaled
  #   instance_type: cpx31
  #   instance_count: 2
  #   location: fsn1
  #   autoscaling:
  #     enabled: true
  #     min_instances: 0
  #     max_instances: 3
  additional_packages:
    - unattended-upgrades
    - update-notifier-common
  post_create_commands:
    - apt update
    - apt upgrade -y
    - apt autoremove -y
    - sudo systemctl enable unattended-upgrades
    - sudo systemctl start unattended-upgrades
  # enable_encryption: true
  # existing_network: <specify if you want to use an existing network, otherwise one will be created for this cluster>
  # kube_api_server_args:
  # - arg1
  # - ...
  # kube_scheduler_args:
  # - arg1
  # - ...
  # kube_controller_manager_args:
  # - arg1
  # - ...
  # kube_cloud_controller_manager_args:
  # - arg1
  # - ...
  # kubelet_args:
  # - arg1
  # - ...
  # kube_proxy_args:
  # - arg1
  # - ...
  # api_server_hostname: k8s.example.com # optional: DNS for the k8s API LoadBalancer. After the script has run, create a DNS record with the address of the API LoadBalancer.
  